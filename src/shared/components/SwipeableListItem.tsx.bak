import React, { useRef } from 'react';
import { motion, useMotionValue, useTransform } from 'framer-motion';
import { Trash2, Archive, Heart } from 'lucide-react';
import { cn } from '@/lib/utils';

interface SwipeableListItemProps {
  children: React.ReactNode;
  onDelete?: () => void;
  onArchive?: () => void;
  onFavorite?: () => void;
  className?: string;
}

export function SwipeableListItem({
  children,
  onDelete,
  onArchive,
  onFavorite,
  className
}: SwipeableListItemProps) {
  const constraintsRef = useRef(null);
  const x = useMotionValue(0);
  
  const background = useTransform(
    x,
    [-200, 0, 200],
    ['#ef4444', '#ffffff', '#10b981']
  );

  const handleDragEnd = () => {
    const xValue = x.get();
    
    if (xValue < -100 && onDelete) {
      onDelete();
    } else if (xValue > 100 && onFavorite) {
      onFavorite();
    }
  };

  return (
    <motion.div
      ref={constraintsRef}
      className={cn("relative overflow-hidden", className)}
    >
      <motion.div
        style={{ background }}
        className="absolute inset-0 flex items-center justify-between px-4"
      >
        <Trash2 className="text-white" />
        <Heart className="text-white" />
      </motion.div>
      
      <motion.div
        drag="x"
        dragConstraints={constraintsRef}
        dragElastic={0.2}
        onDragEnd={handleDragEnd}
        style={{ x }}
        className="relative bg-background"
      >
        {children}
      </motion.div>
    </motion.div>
  );
}
